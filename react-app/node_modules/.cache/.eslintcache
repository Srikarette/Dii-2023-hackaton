[{"C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\index.js":"1","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\App.js":"2","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\reportWebVitals.js":"3","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\Mapcontent.js":"4","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\Navbar.js":"5","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\MapNew.js":"6","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\GlobalStyle.js":"7","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\Mapuser.js":"8","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\pages\\Erro404.js":"9","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\pages\\Notifcation.js":"10","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\Form\\AdminLoginForm.js":"11","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\functions\\travel.js":"12","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\Form\\Formedit.js":"13","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\functions\\fetchNotifications.js":"14","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\layers\\CombineLayers.js":"15","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\StyleofMap\\CSVFileLocal.js":"16","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\layers\\ProvinceTH.js":"17","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\layers\\PointofInterest.js":"18","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\pages\\ManageAdmin.js":"19"},{"size":555,"mtime":1698995583889,"results":"20","hashOfConfig":"21"},{"size":1399,"mtime":1699097140111,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1696565585456,"results":"23","hashOfConfig":"21"},{"size":11056,"mtime":1698995583872,"results":"24","hashOfConfig":"21"},{"size":1121,"mtime":1699095977036,"results":"25","hashOfConfig":"21"},{"size":15766,"mtime":1698995583871,"results":"26","hashOfConfig":"21"},{"size":413,"mtime":1699095977032,"results":"27","hashOfConfig":"21"},{"size":7447,"mtime":1698995583872,"results":"28","hashOfConfig":"21"},{"size":116,"mtime":1698995583889,"results":"29","hashOfConfig":"21"},{"size":111,"mtime":1698995583890,"results":"30","hashOfConfig":"21"},{"size":3127,"mtime":1699095977032,"results":"31","hashOfConfig":"21"},{"size":346,"mtime":1698995583879,"results":"32","hashOfConfig":"21"},{"size":3128,"mtime":1698995583870,"results":"33","hashOfConfig":"21"},{"size":872,"mtime":1699097040134,"results":"34","hashOfConfig":"21"},{"size":828,"mtime":1698995583885,"results":"35","hashOfConfig":"21"},{"size":1396,"mtime":1698995583875,"results":"36","hashOfConfig":"21"},{"size":407,"mtime":1698995583886,"results":"37","hashOfConfig":"21"},{"size":1428,"mtime":1698995583886,"results":"38","hashOfConfig":"21"},{"size":7110,"mtime":1699102555197,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"11ezt55",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"43"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"43"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"43"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"43"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\index.js",[],[],["108"],"C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\App.js",["109"],[],"import React from \"react\";\r\nimport styles from \"./index.css\"; //Must import for tailwindCss bug\r\nimport \"bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport MapNew from \"./components/MapNew\";\r\nimport Erro404 from \"./pages/Erro404\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport AdminLoginForm from \"./components/Form/AdminLoginForm\";\r\nimport Notification from \"./pages/Notifcation\";\r\nimport Mapcontent from \"./components/Mapcontent\";\r\nimport Mapuser from \"./components/Mapuser\";\r\nimport GlobalStyle from \"./components/GlobalStyle\";\r\nimport Admin from \"./pages/ManageAdmin\";\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <>\r\n        <div className=\"App\">\r\n          <GlobalStyle />\r\n          <Navbar />\r\n          <Switch>\r\n            <Route path=\"/\" component={Mapuser} exact />\r\n            <Route path=\"/notifications\" component={Notification} />\r\n            <Route path=\"/officials\" component={AdminLoginForm} />\r\n            <Route path=\"/mapadmin\" component={MapNew} />\r\n            <Route path=\"/mapuser\" component={Mapcontent} />\r\n            <Route path=\"/Admin\" component={Admin} />\r\n            <Route component={Erro404} />{\" \"}\r\n            {/* This route will handle 404 cases */}\r\n          </Switch>\r\n        </div>\r\n      </>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\Mapcontent.js",["110","111","112"],[],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { MapContainer, Marker, Popup, useMapEvents } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport icon from \"leaflet/dist/images/marker-icon.png\";\r\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\r\nimport { create, list, remove } from \"./functions/travel\";\r\nimport { FloatButton } from \"antd\";\r\nimport { ZoomInOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport { GrDocumentUpdate } from \"react-icons/gr\";\r\nimport CombineLayers from \"./layers/CombineLayers\";\r\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\r\n\r\nconst Mapcontent = () => {\r\n  const [position, setPosition] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [form, setForm] = useState({ Category: \"\", lat: 0, lng: 0 });\r\n  const [showTable, setShowTable] = useState(false);\r\n  const [slideAnimation, setSlideAnimation] = useState(false);\r\n  const initialCenter = [13.7563, 100.5018];\r\n  const initialZoomLevel = 6;\r\n  const [zoom, setZoom] = useState(initialZoomLevel);\r\n  const [center, setCenter] = useState(initialCenter);\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [showUserLocation, setShowUserLocation] = useState(false);\r\n  const [markers, setMarkers] = useState([]);\r\n  const mapRef = useRef(null);\r\n\r\n  let DefaultIcon = L.icon({\r\n    iconUrl: icon,\r\n    shadowUrl: iconShadow,\r\n  });\r\n\r\n  const createCustomIcon = (iconUrl, iconSize) => {\r\n    return new L.Icon({\r\n      iconUrl: require(`../assets/${iconUrl}`),\r\n      iconSize,\r\n    });\r\n  };\r\n\r\n  L.Marker.prototype.options.icon = DefaultIcon;\r\n\r\n  useEffect(() => {\r\n    fetchUserLocation();\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = () => {\r\n    list()\r\n      .then((res) => {\r\n        setData(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  function LocationMarker() {\r\n    const map = useMapEvents({\r\n      click(e) {\r\n        map.flyTo(e.latlng, 15);\r\n        setPosition(e.latlng);\r\n        setForm({\r\n          ...form,\r\n          lat: e.latlng.lat,\r\n          lng: e.latlng.lng,\r\n        });\r\n      },\r\n    });\r\n    return position === null ? null : (\r\n      <Marker\r\n        position={position}\r\n        icon={createCustomIcon(\"problem.png\", [38, 38])}\r\n      >\r\n        <Popup>Ready for Marked</Popup>\r\n      </Marker>\r\n    );\r\n  }\r\n\r\n  const handleOnChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    create(form)\r\n      .then((res) => {\r\n        console.log(res);\r\n        loadData();\r\n      })\r\n      .catch((err) => console.log(err));\r\n    loadData();\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    remove(id)\r\n      .then((res) => {\r\n        console.log(res);\r\n        loadData();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  function toggleTable() {\r\n    setShowTable(!showTable);\r\n    setSlideAnimation(true);\r\n  }\r\n\r\n  const zoomtoLocation = (lat, lng) => {\r\n    mapRef.current.flyTo([lat, lng], 14);\r\n  };\r\n\r\n  const fetchUserLocation = () => {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setUserLocation([latitude, longitude]);\r\n        setCenter([latitude, longitude]);\r\n        setZoom(16);\r\n        setShowUserLocation(true);\r\n      });\r\n    } else {\r\n      alert(\"Geolocation is not supported in your browser.\");\r\n    }\r\n  };\r\n\r\n  function getMarkerIcon(category) {\r\n    const iconMappings = {\r\n      Fire: \"fire.png\",\r\n      Flood: \"flood.png\",\r\n      \"Land Slide\": \"landslide.png\",\r\n      \"Active Shooting\": \"criminal.png\",\r\n    };\r\n\r\n    if (category in iconMappings) {\r\n      return createCustomIcon(iconMappings[category], [38, 38]);\r\n    } else {\r\n      return createCustomIcon(\"default.png\", [38, 38]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n      {userLocation && (\r\n        <MapContainer\r\n          ref={mapRef}\r\n          center={center}\r\n          zoom={16}\r\n          style={{ height: \"89vh\", width: \"90%\", zIndex: \"10\" }}\r\n          minZoom={6}\r\n        >\r\n          {showUserLocation && (\r\n            <Marker\r\n              position={userLocation}\r\n              icon={createCustomIcon(\"raise-hand.png\", [38, 38])}\r\n            >\r\n              <Popup>Your Location</Popup>\r\n            </Marker>\r\n          )}\r\n          <CombineLayers />\r\n          <LocationMarker />\r\n          <MarkerClusterGroup\r\n            animate={true}\r\n            maxClusterRadius={50}\r\n            chunkedLoading\r\n          >\r\n            {data\r\n              ? data.map((item, index) =>\r\n                  item.lat && item.lng ? (\r\n                    <Marker\r\n                      position={[item.lat, item.lng]}\r\n                      key={index}\r\n                      eventHandlers={{\r\n                        click: () => zoomtoLocation(item.lat, item.lng),\r\n                      }}\r\n                      icon={getMarkerIcon(item.Category)}\r\n                    >\r\n                      <Popup className=\"border-4 border-indigo-500/100 rounded-lg\">\r\n                        <div>\r\n                          <p>Category: {item.Category}</p>\r\n                          <p>Latitude: {item.lat}</p>\r\n                          <p>Longitude: {item.lng}</p>\r\n                        </div>\r\n                      </Popup>\r\n                    </Marker>\r\n                  ) : null\r\n                )\r\n              : null}\r\n          </MarkerClusterGroup>\r\n        </MapContainer>\r\n      )}\r\n\r\n      <form\r\n        className=\"bg-white shadow-md rounded px-4 py-2\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className=\"mb-4\">\r\n          <label\r\n            htmlFor=\"Category\"\r\n            className=\"block text-gray-700 font-semibold\"\r\n          >\r\n            Category:\r\n          </label>\r\n          <select\r\n            name=\"Category\"\r\n            id=\"Category\"\r\n            onChange={handleOnChange}\r\n            className=\"w-full border border-gray-300 rounded py-2 px-3 focus:outline-none focus:border-blue-500\"\r\n          >\r\n            <option value=\"\">Select a category</option>\r\n            <option value=\"Fire\">Fire</option>\r\n            <option value=\"Flood\">Flood</option>\r\n            <option value=\"Land Slide\">Land Slide</option>\r\n            <option value=\"Active Shooting\">Active Shooting</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label\r\n            htmlFor=\"latitude\"\r\n            className=\"block text-gray-700 font-semibold\"\r\n          >\r\n            Latitude:\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"lat\"\r\n            value={form.lat}\r\n            id=\"latitude\"\r\n            onChange={handleOnChange}\r\n            className=\"w-full border border-gray-300 rounded py-2 px-3 focus:outline-none focus:border-blue-500\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label\r\n            htmlFor=\"longitude\"\r\n            className=\"block text-gray-700 font-semibold\"\r\n          >\r\n            Longitude:\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={form.lng}\r\n            name=\"lng\"\r\n            onChange={handleOnChange}\r\n            id=\"longitude\"\r\n            className=\"w-full border border-gray-300 rounded py-2 px-3 focus:outline-none focus:border-blue-500\"\r\n          />\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-blue-500 text-white font-semibold py-2 px-4 rounded hover-bg-blue-600 focus:outline-none focus:bg-blue-600\"\r\n          >\r\n            Submit\r\n          </button>\r\n          <FloatButton onClick={toggleTable} className=\"float-button\" />\r\n        </div>\r\n      </form>\r\n      <div\r\n        className={`content-table ${showTable ? \"visible\" : \"\"} ${\r\n          slideAnimation ? \"slide-up\" : \"\"\r\n        }`}\r\n      >\r\n        <table className=\"min-w-full divide-y divide-gray-200 \">\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                scope=\"col\"\r\n                className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n              >\r\n                #\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n              >\r\n                Category\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n              >\r\n                Latitude\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n              >\r\n                Longitude\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n              >\r\n                Zoom to\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n              >\r\n                Update\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n              >\r\n                Delete\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {data.map((item, index) => (\r\n              <tr key={index}>\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">{index + 1}</td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">{item.Category}</td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">{item.lat}</td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">{item.lng}</td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  <ZoomInOutlined\r\n                    className=\"cursor-pointer\"\r\n                    onClick={() => zoomtoLocation(item.lat, item.lng)}\r\n                  />\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap cursor-pointer\">\r\n                  <GrDocumentUpdate />\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap cursor-pointer\">\r\n                  <DeleteOutlined\r\n                    className=\"text-red-700\"\r\n                    onClick={() => handleRemove(item._id)}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mapcontent;\r\n","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\Navbar.js",["113"],[],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../assets/LogoAlertTown 2.png\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"bg-black text-white\">\r\n      <div className=\"container m-auto flex justify-between items-center py-4\">\r\n        <Link to=\"/\" className=\"text-2xl text-white\">\r\n          <div className=\"flex items-center\">\r\n            <img src={Logo} alt=\"Logo\" className=\"w-12 h-12 mr-2\" />\r\n            <span>Alert Town</span>\r\n          </div>\r\n        </Link>\r\n        <ul className=\"flex text-lg\">\r\n          <li className=\"mx-4\">\r\n            <Link to=\"/\" className=\"hover:text-red-500\">\r\n              HOME\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-4\">\r\n            <Link to=\"/\" className=\"hover:text-red-500\">\r\n              MAP\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-4\">\r\n            <Link to=\"/officials\" className=\"hover:text-red-500\">\r\n              FOR OFFICIALS\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\MapNew.js",["114","115","116","117","118","119"],[],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MapContainer,\r\n  Marker,\r\n  Popup,\r\n  useMapEvents,\r\n  Circle,\r\n  useMap,\r\n  TileLayer,\r\n} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport icon from \"leaflet/dist/images/marker-icon.png\";\r\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\r\nimport CSVFileLocal from \"./StyleofMap/CSVFileLocal\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n//For backend test\r\nimport { fetchAllNotifications } from \"./functions/fetchNotifications\";\r\nimport Formedit from \"./Form/Formedit\";\r\nimport CombineLayers from \"./layers/CombineLayers\";\r\n\r\nconst MapNew = () => {\r\n  const initialCenter = [13.7563, 100.5018];\r\n  const initialZoomLevel = 6;\r\n  const mapRef = useRef(); // Create a ref to store the map instance\r\n\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [showUserLocation, setShowUserLocation] = useState(false);\r\n  const [zoom, setZoom] = useState(initialZoomLevel);\r\n  const [center, setCenter] = useState(initialCenter);\r\n\r\n  const titleOptions = [\"Fire\", \"Flood\", \"Land Slide\", \"Active Shooting\"];\r\n  const bounds = L.latLngBounds(L.latLng(5, 90), L.latLng(25, 120));\r\n\r\n  const [fetchedData, setFetchedData] = useState([]);\r\n  const [position, setPosition] = useState(null);\r\n  const [form, setForm] = useState({\r\n    latitude: 0,\r\n    longitude: 0,\r\n    category: \"\",\r\n  });\r\n  const [data, setData] = useState([]);\r\n  let DefaultIcon = L.icon({\r\n    iconUrl: icon,\r\n  });\r\n  //For Edit button\r\n  const [id, setId] = useState(null);\r\n  const [drag, setDrag] = useState(false);\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  L.Marker.prototype.options.icon = DefaultIcon;\r\n\r\n  // Create a state variable to hold the marker data\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchUserLocation();\r\n    fetchDataFromAPI();\r\n  }, []);\r\n  const loaddata = () => {\r\n    fetchDataFromAPI()\r\n      .then((res) => {\r\n        setData(res.data);\r\n      })\r\n\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // FETCH USER LOCATION\r\n  const fetchUserLocation = () => {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setUserLocation([latitude, longitude]);\r\n        setCenter([latitude, longitude]);\r\n        setZoom(16);\r\n        setShowUserLocation(true);\r\n      });\r\n    } else {\r\n      alert(\"Geolocation is not supported in your browser.\");\r\n    }\r\n  };\r\n\r\n  // Fetch data from Spring boot 8090\r\n  const fetchDataFromAPI = async () => {\r\n    try {\r\n      const data = await fetchAllNotifications();\r\n      setFetchedData(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // Click for ready Marked\r\n  function LocationMarker() {\r\n    const map = useMapEvents({\r\n      click(e) {\r\n        map.flyTo(e.latlng, 15);\r\n        setPosition(e.latlng);\r\n        setForm({\r\n          ...form,\r\n          latitude: e.latlng.lat,\r\n          longitude: e.latlng.lng,\r\n        });\r\n      },\r\n    });\r\n    return position === null ? null : (\r\n      <Marker\r\n        position={position}\r\n        icon={createCustomIcon(\"problem.png\", [38, 38])}\r\n      >\r\n        <Popup>Ready for Marked</Popup>\r\n      </Marker>\r\n    );\r\n  }\r\n\r\n  // Pull Icon from assets\r\n  const createCustomIcon = (iconUrl, iconSize) => {\r\n    return new L.Icon({\r\n      iconUrl: require(`../assets/${iconUrl}`),\r\n      iconSize,\r\n    });\r\n  };\r\n\r\n  // Write in form\r\n  const handleOnChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // Group Markers\r\n  const groupedMarkers = fetchedData.reduce((grouped, dataItem) => {\r\n    if (!grouped[dataItem.category]) {\r\n      grouped[dataItem.category] = [];\r\n    }\r\n    grouped[dataItem.category].push(dataItem);\r\n    return grouped;\r\n  }, {});\r\n\r\n  const selectedCategory = form?.category || \"\"; // Provide a default value if 'form' or 'category' is undefined\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handlePostMarker(form.category, form.lat, form.lng);\r\n\r\n    // Create a new marker data\r\n    const newMarker = {\r\n      id: Date.now(), // You can use a unique identifier for the marker\r\n      category: form.category,\r\n      latitude: form.latitude,\r\n      longitude: form.longitude,\r\n      sent_at: new Date().toISOString(), // Add timestamp or use your actual timestamp\r\n    };\r\n\r\n    // Update the markers state with the new marker data\r\n    setMarkers((prevMarkers) => [...prevMarkers, newMarker]);\r\n\r\n    // Clear the form\r\n    setForm({\r\n      latitude: 0,\r\n      longitude: 0,\r\n      category: \"\",\r\n    });\r\n    loaddata();\r\n  };\r\n\r\n  const flyto = (latitude, longitude) => {\r\n    console.log(latitude, longitude);\r\n    mapRef.current.flyTo([latitude, longitude], 15);\r\n  };\r\n\r\n  // Handle posting a new marker to the server\r\n  const handlePostMarker = async (category, latitude, longitude) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8090/notifications\", {\r\n        category: category,\r\n        latitude: latitude,\r\n        longitude: longitude,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        console.log(\"Data posted successfully\");\r\n      } else {\r\n        console.error(\"Failed to post data:\", response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle deleting a marker\r\n  const handleDeleteMarker = (notificationId) => {\r\n    loaddata();\r\n    axios\r\n      .delete(`http://localhost:8090/notifications/${notificationId}`)\r\n      .then((response) => {\r\n        // Handle success, such as removing the marker from the map\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  //Handle edit\r\n  const handleEdit = (id, category, latitude, longitude) => {\r\n    flyto(latitude, longitude);\r\n\r\n    setId(id);\r\n    setDrag(true); // Enable marker dragging\r\n\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleSubmitEdit = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    for (const key in form) {\r\n      formData.append(key, form[key]);\r\n    }\r\n\r\n    // Send the updated marker data to the server here\r\n    // For example, you can use an Axios POST request\r\n    axios\r\n      .patch(`http://localhost:8090/notifications/${id}`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n\r\n      .then((response) => {\r\n        // Handle success\r\n        console.log(response);\r\n        loaddata();\r\n        setEdit(false);\r\n        setId(null);\r\n        setDrag(!drag);\r\n        if (response.status === 200) {\r\n          console.log(\"Data updated successfully\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // Handle error\r\n\r\n        console.error(\"Failed to update data:\", error);\r\n      });\r\n  };\r\n\r\n  const handleDragend = (e) => {\r\n    const newLat = e.target.getLatLng().lat;\r\n    const newLng = e.target.getLatLng().lng;\r\n\r\n    setForm({\r\n      ...form,\r\n      latitude: newLat,\r\n      longitude: newLng,\r\n    });\r\n    updateArrayData(id, newLat, newLng);\r\n  };\r\n\r\n  const updateArrayData = (id, latitude, longitude) => {\r\n    setData((prevData) =>\r\n      prevData.map((item) =>\r\n        item.id === id ? { ...item, latitude, longitude } : item\r\n      )\r\n    );\r\n  };\r\n  // Handle cancel\r\n  const handleCancel = () => {\r\n    setEdit(false);\r\n    setId(null);\r\n    setDrag(!drag);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex\">\r\n        {userLocation && (\r\n          <MapContainer\r\n            center={center}\r\n            zoom={16}\r\n            ref={mapRef} // Assign the map instance to the ref\r\n            className=\"MapContainer\"\r\n            bounds={bounds}\r\n            style={{ height: \"89vh\", width: \"87%\" }}\r\n            minZoom={6}\r\n          >\r\n            <CombineLayers />\r\n            <LocationMarker />\r\n            <CSVFileLocal />\r\n            {Object.keys(groupedMarkers).map((category, index) => (\r\n              <MarkerClusterGroup\r\n                key={index}\r\n                maxClusterRadius={50}\r\n                chunkedLoading\r\n              >\r\n                {groupedMarkers[category].map((dataItem, markerIndex) => {\r\n                  let markerIcon = createCustomIcon(\"fire.png\", [38, 38]);\r\n\r\n                  if (category === \"Flood\") {\r\n                    markerIcon = createCustomIcon(\"flood.png\", [38, 38]);\r\n                  } else if (category === \"Land Slide\") {\r\n                    markerIcon = createCustomIcon(\"landslide.png\", [38, 38]);\r\n                  } else if (category === \"Active Shooting\") {\r\n                    markerIcon = createCustomIcon(\"criminal.png\", [38, 38]);\r\n                  }\r\n\r\n                  return (\r\n                    <Marker\r\n                      eventHandlers={{\r\n                        dragend: (e) => console.log(e),\r\n                      }}\r\n                      draggable={id === dataItem.id ? drag : false}\r\n                      key={markerIndex}\r\n                      position={[dataItem.latitude, dataItem.longitude]}\r\n                      icon={markerIcon}\r\n                    >\r\n                      <Popup>\r\n                        <div>\r\n                          <p>ID: {dataItem.id}</p>\r\n                          <p>category: {dataItem.category}</p>\r\n                          <p>Latitude: {dataItem.latitude}</p>\r\n                          <p>Longitude: {dataItem.longitude}</p>\r\n                          <p>Sent At: {dataItem.sent_at}</p>\r\n                          <button\r\n                            onClick={() =>\r\n                              handleEdit(\r\n                                dataItem.id,\r\n                                dataItem.category,\r\n                                dataItem.latitude,\r\n                                dataItem.longitude\r\n                              )\r\n                            }\r\n                            className=\"border-2 border-blue-500 rounded-lg p-1 bg-blue-500 text-yellow-200 mr-4\"\r\n                          >\r\n                            Update\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDeleteMarker(dataItem.id)}\r\n                            className=\"border-2 border-rose-500 rounded-lg p-1 bg-red-500 text-yellow-100\"\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </Popup>\r\n                    </Marker>\r\n                  );\r\n                })}\r\n              </MarkerClusterGroup>\r\n            ))}\r\n            {showUserLocation && (\r\n              <Marker\r\n                position={userLocation}\r\n                icon={createCustomIcon(\"raise-hand.png\", [40, 40])}\r\n              >\r\n                <Popup>Your Location</Popup>\r\n              </Marker>\r\n            )}\r\n            {/* Render newly added markers */}\r\n            {markers.map((newMarker, markerIndex) => {\r\n              let markerIcon = createCustomIcon(\"fire.png\", [38, 38]);\r\n\r\n              if (newMarker.category === \"flood\") {\r\n                markerIcon = createCustomIcon(\"flood.png\", [38, 38]);\r\n              } else if (newMarker.category === \"Land Slide\") {\r\n                markerIcon = createCustomIcon(\"landslide.png\", [38, 38]);\r\n              } else if (newMarker.category === \"Active Shooting\") {\r\n                markerIcon = createCustomIcon(\"criminal.png\", [38, 38]);\r\n              }\r\n\r\n              return (\r\n                <Marker\r\n                  key={markerIndex}\r\n                  position={[newMarker.latitude, newMarker.longitude]}\r\n                  icon={markerIcon}\r\n                  eventHandlers={{\r\n                    dragend: handleDragend,\r\n                  }}\r\n                  draggable={id === newMarker.id ? drag : false}\r\n                >\r\n                  <Popup>\r\n                    <div>\r\n                      <p>ID: {newMarker.id}</p>\r\n                      <p>category: {newMarker.category}</p>\r\n                      <p>Latitude: {newMarker.latitude}</p>\r\n                      <p>Longitude: {newMarker.longitude}</p>\r\n                      <p>Sent At: {newMarker.sent_at}</p>\r\n                      <button className=\"border-2 border-blue-500 rounded-lg p-1 bg-blue-500 text-yellow-200 mr-4\">\r\n                        Update\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDeleteMarker(newMarker.id)}\r\n                        className=\"border-2 border-rose-500 rounded-lg p-1 bg-red-500 text-yellow-100\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </Popup>\r\n                </Marker>\r\n              );\r\n            })}\r\n          </MapContainer>\r\n        )}\r\n        {edit ? (\r\n          <Formedit\r\n            titleOptions={titleOptions}\r\n            handleOnChange={handleOnChange}\r\n            handleCancel={handleCancel}\r\n            id={id}\r\n            form={form}\r\n            setForm={setForm}\r\n            handleSubmitEdit={handleSubmitEdit}\r\n          />\r\n        ) : (\r\n          <form\r\n            className=\"bg-white shadow-md rounded px-4 py-2\"\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <div className=\"mb-4\">\r\n              <label\r\n                htmlFor=\"category\"\r\n                className=\"block text-gray-700 font-semibold\"\r\n              >\r\n                category:\r\n              </label>\r\n              <select\r\n                name=\"category\"\r\n                id=\"category\"\r\n                onChange={(e) => handleOnChange(e)}\r\n                className=\"w-full border border-gray-300 rounded py-2 px-3 focus:outline-none focus:border-blue-500\"\r\n              >\r\n                {titleOptions.map((option, index) => (\r\n                  <option key={index} value={option}>\r\n                    {option}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label\r\n                htmlFor=\"latitude\"\r\n                className=\"block text-gray-700 font-semibold\"\r\n              >\r\n                Latitude:\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"latitude\"\r\n                value={form.latitude}\r\n                id=\"latitude\"\r\n                onChange={(e) => handleOnChange(e)}\r\n                className=\"w-full border border-gray-300 rounded py-2 px-3 focus:outline-none focus:border-blue-500\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label\r\n                htmlFor=\"longitude\"\r\n                className=\"block text-gray-700 font-semibold\"\r\n              >\r\n                Longitude:\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"longitude\"\r\n                value={form.longitude}\r\n                onChange={(e) => handleOnChange(e)}\r\n                id=\"longitude\"\r\n                className=\"w-full border border-gray-300 rounded py-2 px-3 focus:outline-none focus:border-blue-500\"\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"bg-blue-500 text-white font-semibold py-2 px-4 rounded hover-bg-blue-600 focus:outline-none focus:bg-blue-600\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapNew;\r\n","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\GlobalStyle.js",[],[],"C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\Mapuser.js",["120","121","122","123","124","125","126","127","128","129","130"],[],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MapContainer,\r\n  Marker,\r\n  Popup,\r\n  useMapEvents,\r\n  Circle,\r\n  useMap,\r\n  TileLayer,\r\n} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport icon from \"leaflet/dist/images/marker-icon.png\";\r\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\r\nimport CSVFileLocal from \"./StyleofMap/CSVFileLocal\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n//For backend test\r\nimport { fetchAllNotifications } from \"./functions/fetchNotifications\";\r\nimport CombineLayers from \"./layers/CombineLayers\";\r\n\r\nconst MapNew = () => {\r\n  const initialCenter = [13.7563, 100.5018];\r\n  const initialZoomLevel = 6;\r\n  const mapRef = useRef(); // Create a ref to store the map instance\r\n\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [showUserLocation, setShowUserLocation] = useState(false);\r\n  const [zoom, setZoom] = useState(initialZoomLevel);\r\n  const [center, setCenter] = useState(initialCenter);\r\n\r\n  const titleOptions = [\"Fire\", \"Flood\", \"Land Slide\", \"Active Shooting\"];\r\n  const bounds = L.latLngBounds(L.latLng(5, 90), L.latLng(25, 120));\r\n\r\n  const [fetchedData, setFetchedData] = useState([]);\r\n  const [position, setPosition] = useState(null);\r\n  const [form, setForm] = useState({\r\n    lat: 0,\r\n    lng: 0,\r\n    category: \"\",\r\n  });\r\n  const [data, setData] = useState([]);\r\n  let DefaultIcon = L.icon({\r\n    iconUrl: icon,\r\n  });\r\n  L.Marker.prototype.options.icon = DefaultIcon;\r\n\r\n  // Create a state variable to hold the marker data\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchUserLocation();\r\n    fetchDataFromAPI();\r\n  }, []);\r\n  const loaddata = () => {\r\n    fetchDataFromAPI()\r\n      .then((res) => {\r\n        setData(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // FETCH USER LOCATION\r\n  const fetchUserLocation = () => {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setUserLocation([latitude, longitude]);\r\n        setCenter([latitude, longitude]);\r\n        setZoom(16);\r\n        setShowUserLocation(true);\r\n      });\r\n    } else {\r\n      alert(\"Geolocation is not supported in your browser.\");\r\n    }\r\n  };\r\n\r\n  // Fetch data from Spring boot 8090\r\n  const fetchDataFromAPI = async () => {\r\n    try {\r\n      const data = await fetchAllNotifications();\r\n      setFetchedData(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // Click for ready Marked\r\n  function LocationMarker() {\r\n    const map = useMapEvents({\r\n      click(e) {\r\n        map.flyTo(e.latlng, 15);\r\n        setPosition(e.latlng);\r\n        setForm({\r\n          ...form,\r\n          lat: e.latlng.lat,\r\n          lng: e.latlng.lng,\r\n        });\r\n      },\r\n    });\r\n    return position === null ? null : (\r\n      <Marker\r\n        position={position}\r\n        icon={createCustomIcon(\"problem.png\", [38, 38])}\r\n      >\r\n        <Popup>Ready for Marked</Popup>\r\n      </Marker>\r\n    );\r\n  }\r\n\r\n  // Pull Icon from assets\r\n  const createCustomIcon = (iconUrl, iconSize) => {\r\n    return new L.Icon({\r\n      iconUrl: require(`../assets/${iconUrl}`),\r\n      iconSize,\r\n    });\r\n  };\r\n\r\n  // Write in form\r\n  const handleOnChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // Group Markers\r\n  const groupedMarkers = fetchedData.reduce((grouped, dataItem) => {\r\n    if (!grouped[dataItem.category]) {\r\n      grouped[dataItem.category] = [];\r\n    }\r\n    grouped[dataItem.category].push(dataItem);\r\n    return grouped;\r\n  }, {});\r\n\r\n  const selectedCategory = form.category; // Store the selected category\r\n\r\n  // Handle form submission\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex\">\r\n        {userLocation && (\r\n          <MapContainer\r\n            center={center}\r\n            zoom={16}\r\n            ref={mapRef} // Assign the map instance to the ref\r\n            className=\"MapContainer\"\r\n            bounds={bounds}\r\n            style={{ height: \"89vh\", width: \"100%\" }}\r\n            minZoom={6}\r\n          >\r\n            <CombineLayers />\r\n\r\n            <LocationMarker />\r\n            <CSVFileLocal />\r\n            {Object.keys(groupedMarkers).map((category, index) => (\r\n              <MarkerClusterGroup\r\n                key={index}\r\n                maxClusterRadius={50}\r\n                chunkedLoading\r\n              >\r\n                {groupedMarkers[category].map((dataItem, markerIndex) => {\r\n                  let markerIcon = createCustomIcon(\"fire.png\", [38, 38]);\r\n\r\n                  if (category === \"Flood\") {\r\n                    markerIcon = createCustomIcon(\"flood.png\", [38, 38]);\r\n                  } else if (category === \"Land Slide\") {\r\n                    markerIcon = createCustomIcon(\"landslide.png\", [38, 38]);\r\n                  } else if (category === \"Active Shooting\") {\r\n                    markerIcon = createCustomIcon(\"criminal.png\", [38, 38]);\r\n                  }\r\n\r\n                  return (\r\n                    <Marker\r\n                      key={markerIndex}\r\n                      position={[dataItem.latitude, dataItem.longitude]}\r\n                      icon={markerIcon}\r\n                    >\r\n                      <Popup>\r\n                        <div>\r\n                          <p>Category: {dataItem.category}</p>\r\n                          <p>Latitude: {dataItem.latitude}</p>\r\n                          <p>Longitude: {dataItem.longitude}</p>\r\n                          <p>Sent At: {dataItem.sent_at}</p>\r\n                        </div>\r\n                      </Popup>\r\n                    </Marker>\r\n                  );\r\n                })}\r\n              </MarkerClusterGroup>\r\n            ))}\r\n            {showUserLocation && (\r\n              <Marker\r\n                position={userLocation}\r\n                icon={createCustomIcon(\"raise-hand.png\", [40, 40])}\r\n              >\r\n                <Popup>Your Location</Popup>\r\n              </Marker>\r\n            )}\r\n            {/* Render newly added markers */}\r\n            {markers.map((newMarker, markerIndex) => {\r\n              let markerIcon = createCustomIcon(\"fire.png\", [38, 38]);\r\n\r\n              if (newMarker.category === \"flood\") {\r\n                markerIcon = createCustomIcon(\"flood.png\", [38, 38]);\r\n              } else if (newMarker.category === \"Land Slide\") {\r\n                markerIcon = createCustomIcon(\"landslide.png\", [38, 38]);\r\n              } else if (newMarker.category === \"Active Shooting\") {\r\n                markerIcon = createCustomIcon(\"criminal.png\", [38, 38]);\r\n              }\r\n\r\n              return (\r\n                <Marker\r\n                  key={markerIndex}\r\n                  position={[newMarker.latitude, newMarker.longitude]}\r\n                  icon={markerIcon}\r\n                >\r\n                  <Popup>\r\n                    <div>\r\n                      <p>Category: {newMarker.category}</p>\r\n                      <p>Latitude: {newMarker.latitude}</p>\r\n                      <p>Longitude: {newMarker.longitude}</p>\r\n                      <p>Sent At: {newMarker.sent_at}</p>\r\n                    </div>\r\n                  </Popup>\r\n                </Marker>\r\n              );\r\n            })}\r\n          </MapContainer>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapNew;\r\n","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\pages\\Erro404.js",[],[],"C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\pages\\Notifcation.js",[],[],"C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\Form\\AdminLoginForm.js",[],[],"C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\functions\\travel.js",[],[],"C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\Form\\Formedit.js",["131","132"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { fetchNotificationById } from \"../functions/fetchNotifications\";\r\nconst Formedit = ({\r\n  titleOptions,\r\n  handleOnChange,\r\n  handleCancel,\r\n  id,\r\n  form,\r\n  setForm,\r\n  handleSubmitEdit,\r\n}) => {\r\n  useEffect(() => {\r\n    if (id) {\r\n      loadData(id);\r\n    }\r\n  }, [id]);\r\n\r\n  const loadData = (id) => {\r\n    fetchNotificationById(id)\r\n      .then((res) => {\r\n        if (res) {\r\n          // Update 'form' with data only if it exists\r\n          setForm((prevForm) => ({\r\n            ...prevForm,\r\n            category: res.category,\r\n            latitude: res.latitude,\r\n            longitude: res.longitude,\r\n          }));\r\n        } else {\r\n          console.log(\"Notification data not found\");\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"bg-white shadow-md rounded px-4 py-2\"\r\n      onSubmit={(e) => handleSubmitEdit(e)}\r\n    >\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"category\" className=\"block text-gray-700 font-semibold\">\r\n          category:\r\n        </label>\r\n        <select\r\n          name=\"category\"\r\n          id=\"category\"\r\n          value={form.category}\r\n          onChange={(e) => handleOnChange(e)}\r\n          className=\"w-full border border-gray-300 rounded py-2 px-3 focus:outline-none focus:border-blue-500\"\r\n        >\r\n          {titleOptions.map((option, index) => (\r\n            <option key={index} value={option}>\r\n              {option}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"latitude\" className=\"block text-gray-700 font-semibold\">\r\n          Latitude:\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"latitude\"\r\n          value={form.latitude}\r\n          id=\"latitude\"\r\n          onChange={(e) => handleOnChange(e)}\r\n          className=\"w-full border border-gray-300 rounded py-2 px-3 focus:outline-none focus:border-blue-500\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label\r\n          htmlFor=\"longitude\"\r\n          className=\"block text-gray-700 font-semibold\"\r\n        >\r\n          Longitude:\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"longitude\"\r\n          value={form.longitude}\r\n          onChange={(e) => handleOnChange(e)}\r\n          id=\"longitude\"\r\n          className=\"w-full border border-gray-300 rounded py-2 px-3 focus:outline-none focus:border-blue-500\"\r\n        />\r\n      </div>\r\n      <div className=\"text-center\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-green-600 text-white font-semibold py-2 px-4 rounded hover-bg-blue-600 focus:outline-none focus:bg-blue-600 m-1\"\r\n        >\r\n          Edit\r\n        </button>\r\n        <button\r\n          onClick={handleCancel}\r\n          type=\"submit\"\r\n          className=\"bg-red-600 text-white font-semibold py-2 px-4 rounded hover-bg-blue-600 focus:outline-none focus:bg-green-400\"\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Formedit;\r\n","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\functions\\fetchNotifications.js",["133"],[],"import React from \"react\";\r\n\r\nexport async function fetchAllNotifications() {\r\n  try {\r\n    const response = await fetch(\"http://localhost:8080/notifications\");\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching data:\", error);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function fetchNotificationById(id) {\r\n  try {\r\n    const response = await fetch(`http://localhost:8080/notifications/${id}`);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching data:\", error);\r\n    return null; // Return null for a single notification by ID if not found\r\n  }\r\n}\r\n","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\layers\\CombineLayers.js",["134"],[],"import React from \"react\";\r\nimport { LayersControl, LayerGroup, TileLayer } from \"react-leaflet\";\r\nimport ProvinceTH from \"./ProvinceTH\";\r\nimport PointofInterest from \"./PointofInterest\";\r\n\r\nconst CombineLayers = () => {\r\n  return (\r\n    <>\r\n      <LayersControl position=\"topright\">\r\n        {/* Layer1 */}\r\n        <LayersControl.Overlay name=\"basemap\" checked>\r\n          <TileLayer url=\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        </LayersControl.Overlay>\r\n        {/* Layer 2 */}\r\n        <LayersControl.Overlay name=\"Thailand\">\r\n          <ProvinceTH />\r\n        </LayersControl.Overlay>\r\n        {/* Layer 3 */}\r\n        <LayersControl.Overlay name=\"Chiang Mai\">\r\n          <PointofInterest />\r\n        </LayersControl.Overlay>\r\n      </LayersControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CombineLayers;\r\n","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\StyleofMap\\CSVFileLocal.js",["135","136","137"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport { Marker } from \"react-leaflet\";\r\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\r\nimport L from \"leaflet\";\r\n\r\nconst CSVFileLocal = () => {\r\n  const [airport, setAirport] = useState(null);\r\n  let DefaultIcon = L.icon({\r\n    iconUrl: require(\"../../assets/airport.png\"),\r\n    shadowUrl: iconShadow,\r\n    iconSize: [20, 20],\r\n    iconAnchor: [12.5, 20.5],\r\n  });\r\n  L.Marker.prototype.options.icon = DefaultIcon;\r\n\r\n  useEffect(() => {\r\n    //code\r\n    fetchAirport();\r\n  }, []); //add array for block infinity loop\r\n\r\n  const fetchAirport = async () => {\r\n    const file = require(\"../../assets/Airport.csv\");\r\n    const res = await fetch(file);\r\n    // console.log(\"Show Response\", res);\r\n\r\n    const text = await res.text();\r\n    // console.log(\"Show Text\", text);\r\n\r\n    const json = Papa.parse(text, { header: true }).data;\r\n    // console.log(\"Show Json\", json);\r\n\r\n    const filterAirport = json.filter(\r\n      (item) => item.long !== \"\" && item.lat !== \"\"\r\n    ); //กรอง data เก็บไว้ใน item\r\n    setAirport(filterAirport);\r\n  };\r\n  // return airport\r\n  //   ? airport.map((item, index) => (\r\n  //       <Marker key={index} position={[item.lat, item.long]}></Marker>\r\n  //     ))\r\n  //   : null; // lat ก่อน long\r\n};\r\n\r\nexport default CSVFileLocal;\r\n","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\layers\\ProvinceTH.js",[],[],"C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\components\\layers\\PointofInterest.js",["138","139"],[],"import React, { useEffect, useState } from \"react\";\r\nimport * as turf from \"@turf/turf\"; // To check you in point of interest and find coord\r\nimport chiangmai from \"../geolocation/ChiangMai.json\";\r\nimport { GeoJSON } from \"react-leaflet\";\r\n\r\nconst stylepoint = {\r\n  color: \"red\",\r\n};\r\nconst PointofInterest = () => {\r\n  const [check, setCheck] = useState(null);\r\n  useEffect(() => {\r\n    getUserLocation();\r\n  }, []);\r\n\r\n  const getUserLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const lat = position.coords.latitude;\r\n          const lng = position.coords.longitude;\r\n          const me = handleCheck(lat, lng, chiangmai); // Pass lat, lng, and chiangmai separately\r\n          console.log(\"I am here! \" + me);\r\n          setCheck(me);\r\n        },\r\n        (err) => {\r\n          console.log(\"Cannot get Location \", err);\r\n        }\r\n      );\r\n    } else {\r\n      console.log(\"Cannot get Location \");\r\n    }\r\n  };\r\n\r\n  const handleCheck = (lat, lng, chiangmai) => {\r\n    const isPoint = turf.point([lat, lng]);\r\n    const checkIsLiveChiangMai = turf.booleanPointInPolygon(\r\n      isPoint,\r\n      chiangmai.geometry\r\n    );\r\n    return checkIsLiveChiangMai;\r\n  };\r\n\r\n  //   const finalStyle = check ? {}\r\n\r\n  return (\r\n    <>\r\n      <GeoJSON data={chiangmai} style={stylepoint} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PointofInterest;\r\n","C:\\Users\\tanaw\\OneDrive\\Desktop\\HK\\Dii-2023-hackaton\\react-app\\src\\pages\\ManageAdmin.js",["140"],[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"147","line":22,"column":10,"nodeType":"145","messageId":"146","endLine":22,"endColumn":14},{"ruleId":"143","severity":1,"message":"148","line":26,"column":10,"nodeType":"145","messageId":"146","endLine":26,"endColumn":17},{"ruleId":"143","severity":1,"message":"149","line":26,"column":19,"nodeType":"145","messageId":"146","endLine":26,"endColumn":29},{"ruleId":"143","severity":1,"message":"150","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"151","line":8,"column":3,"nodeType":"145","messageId":"146","endLine":8,"endColumn":9},{"ruleId":"143","severity":1,"message":"152","line":9,"column":3,"nodeType":"145","messageId":"146","endLine":9,"endColumn":9},{"ruleId":"143","severity":1,"message":"153","line":10,"column":3,"nodeType":"145","messageId":"146","endLine":10,"endColumn":12},{"ruleId":"143","severity":1,"message":"147","line":29,"column":10,"nodeType":"145","messageId":"146","endLine":29,"endColumn":14},{"ruleId":"143","severity":1,"message":"154","line":42,"column":10,"nodeType":"145","messageId":"146","endLine":42,"endColumn":14},{"ruleId":"143","severity":1,"message":"155","line":142,"column":9,"nodeType":"145","messageId":"146","endLine":142,"endColumn":25},{"ruleId":"143","severity":1,"message":"156","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":13},{"ruleId":"143","severity":1,"message":"151","line":8,"column":3,"nodeType":"145","messageId":"146","endLine":8,"endColumn":9},{"ruleId":"143","severity":1,"message":"152","line":9,"column":3,"nodeType":"145","messageId":"146","endLine":9,"endColumn":9},{"ruleId":"143","severity":1,"message":"153","line":10,"column":3,"nodeType":"145","messageId":"146","endLine":10,"endColumn":12},{"ruleId":"143","severity":1,"message":"147","line":28,"column":10,"nodeType":"145","messageId":"146","endLine":28,"endColumn":14},{"ruleId":"143","severity":1,"message":"157","line":31,"column":9,"nodeType":"145","messageId":"146","endLine":31,"endColumn":21},{"ruleId":"143","severity":1,"message":"154","line":41,"column":10,"nodeType":"145","messageId":"146","endLine":41,"endColumn":14},{"ruleId":"143","severity":1,"message":"149","line":48,"column":19,"nodeType":"145","messageId":"146","endLine":48,"endColumn":29},{"ruleId":"143","severity":1,"message":"158","line":54,"column":9,"nodeType":"145","messageId":"146","endLine":54,"endColumn":17},{"ruleId":"143","severity":1,"message":"159","line":119,"column":9,"nodeType":"145","messageId":"146","endLine":119,"endColumn":23},{"ruleId":"143","severity":1,"message":"155","line":135,"column":9,"nodeType":"145","messageId":"146","endLine":135,"endColumn":25},{"ruleId":"143","severity":1,"message":"150","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"161","line":16,"column":6,"nodeType":"162","endLine":16,"endColumn":10,"suggestions":"163"},{"ruleId":"143","severity":1,"message":"164","line":1,"column":8,"nodeType":"145","messageId":"146","endLine":1,"endColumn":13},{"ruleId":"143","severity":1,"message":"165","line":2,"column":25,"nodeType":"145","messageId":"146","endLine":2,"endColumn":35},{"ruleId":"143","severity":1,"message":"164","line":1,"column":8,"nodeType":"145","messageId":"146","endLine":1,"endColumn":13},{"ruleId":"143","severity":1,"message":"166","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":16},{"ruleId":"143","severity":1,"message":"167","line":8,"column":10,"nodeType":"145","messageId":"146","endLine":8,"endColumn":17},{"ruleId":"143","severity":1,"message":"168","line":10,"column":10,"nodeType":"145","messageId":"146","endLine":10,"endColumn":15},{"ruleId":"160","severity":1,"message":"169","line":13,"column":6,"nodeType":"162","endLine":13,"endColumn":8,"suggestions":"170"},{"ruleId":"143","severity":1,"message":"171","line":5,"column":7,"nodeType":"145","messageId":"146","endLine":5,"endColumn":11},"no-new-object",["172"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'zoom' is assigned a value but never used.","'markers' is assigned a value but never used.","'setMarkers' is assigned a value but never used.","'useState' is defined but never used.","'Circle' is defined but never used.","'useMap' is defined but never used.","'TileLayer' is defined but never used.","'data' is assigned a value but never used.","'selectedCategory' is assigned a value but never used.","'axios' is defined but never used.","'titleOptions' is assigned a value but never used.","'loaddata' is assigned a value but never used.","'handleOnChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'React' is defined but never used.","'LayerGroup' is defined but never used.","'Marker' is defined but never used.","'airport' is assigned a value but never used.","'check' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserLocation'. Either include it or remove the dependency array.",["174"],"'Form' is assigned a value but never used.","no-object-constructor",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [id, loadData]",{"range":"179","text":"180"},"Update the dependencies array to be: [getUserLocation]",{"range":"181","text":"182"},[328,332],"[id, loadData]",[413,415],"[getUserLocation]"]