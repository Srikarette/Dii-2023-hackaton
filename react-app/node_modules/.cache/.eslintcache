[{"C:\\Users\\Lenovo\\Desktop\\Dii-2023-hackaton\\react-app\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\Dii-2023-hackaton\\react-app\\src\\App.js":"2","C:\\Users\\Lenovo\\Desktop\\Dii-2023-hackaton\\react-app\\src\\reportWebVitals.js":"3","C:\\Users\\Lenovo\\Desktop\\Dii-2023-hackaton\\react-app\\src\\components\\ComponentContainer.js":"4","C:\\Users\\Lenovo\\Desktop\\Dii-2023-hackaton\\react-app\\src\\components\\Map.js":"5","C:\\Users\\Lenovo\\Desktop\\Dii-2023-hackaton\\react-app\\src\\components\\GlobalStyle.js":"6"},{"size":606,"mtime":1696476573831,"results":"7","hashOfConfig":"8"},{"size":310,"mtime":1696864565313,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1696475941438,"results":"10","hashOfConfig":"8"},{"size":457,"mtime":1696478472285,"results":"11","hashOfConfig":"8"},{"size":4187,"mtime":1696866871454,"results":"12","hashOfConfig":"8"},{"size":234,"mtime":1696478292816,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9npnop",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lenovo\\Desktop\\Dii-2023-hackaton\\react-app\\src\\index.js",[],[],"C:\\Users\\Lenovo\\Desktop\\Dii-2023-hackaton\\react-app\\src\\App.js",["33"],[],"C:\\Users\\Lenovo\\Desktop\\Dii-2023-hackaton\\react-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\Lenovo\\Desktop\\Dii-2023-hackaton\\react-app\\src\\components\\ComponentContainer.js",[],[],"C:\\Users\\Lenovo\\Desktop\\Dii-2023-hackaton\\react-app\\src\\components\\Map.js",["34"],[],"import { React, useState,useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Circle,Marker ,Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Map({ className }) {\r\n    const initialCenter = [13.7563, 100.5018]; // Thailand's coordinates\r\n    const initialZoomLevel = 6; // Initial zoom level\r\n    const customMarkerIcon = L.divIcon({\r\n        className: 'custom-marker-icon',\r\n        html: '<div style=\"background-color: red; width: 12px; height: 12px; border-radius: 50%;\"></div>',\r\n    });\r\n\r\n    const [userLocation, setUserLocation] = useState(null);\r\n    const [zoom, setZoom] = useState(initialZoomLevel);\r\n    const [center, setCenter] = useState(initialCenter);\r\n    const [mapReady, setMapReady] = useState(false);\r\n    const [showMarker, setShowMarker] = useState(false);\r\n\r\n    // Function to handle clicking the \"Go to My Location\" button\r\n    const handleGoToUserLocation = () => {\r\n        if ('geolocation' in navigator) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                const { latitude, longitude } = position.coords;\r\n                setUserLocation([latitude, longitude]);\r\n                setCenter([latitude, longitude]); // Set the center to the user's location\r\n                setZoom(18); // Set a custom zoom level to zoom in on the user's location\r\n                setShowMarker(true); // Show the marker\r\n            });\r\n        } else {\r\n            alert('Geolocation is not supported in your browser.');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchUserLocation = () => {\r\n            if ('geolocation' in navigator) {\r\n                navigator.geolocation.getCurrentPosition((position) => {\r\n                    const { latitude, longitude } = position.coords;\r\n                    setUserLocation([latitude, longitude]);\r\n                    setCenter([latitude, longitude]);\r\n                    setZoom(18);\r\n                    setShowMarker(false);\r\n                    setMapReady(true); // Set map readiness to true\r\n                });\r\n            } else {\r\n                alert('Geolocation is not supported in your browser.');\r\n            }\r\n        };\r\n\r\n        fetchUserLocation();\r\n    }, []);\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className=\"playground\">\r\n                <button className='emergency-btn' onClick={handleGoToUserLocation}>Emergency aleart!</button>\r\n                <div className='info'>\r\n                    {userLocation && (\r\n                        <MapContainer center={center} zoom={zoom} className=\"MapContainer\">\r\n                            <TileLayer\r\n                                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                            />\r\n                            {showMarker && (\r\n                                <>\r\n                                    <Circle center={userLocation} radius={100} color=\"red\">\r\n                                        <Popup>You are here</Popup>\r\n                                    </Circle>\r\n                                    <Marker position={userLocation} icon={customMarkerIcon}>\r\n                                        <Popup>Center</Popup>\r\n                                    </Marker>\r\n                                </>\r\n                            )}\r\n                        </MapContainer>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nMap.propTypes = {\r\n    className: PropTypes.string.isRequired\r\n}\r\n\r\nexport default styled(Map)`\r\n\r\n.MapContainer {\r\n    width: 100%;\r\n    height: 1000px;\r\n}\r\n.info {\r\n    /* margin-top: 65px; */\r\n}\r\n.playground {\r\n    width: 100%;\r\n}\r\n.emergency-btn{\r\n    margin-left: 50%;\r\n}\r\n\r\n.custom-marker-icon {\r\n    width: 12px;\r\n    height: 12px;\r\n    margin: -6px 0 0 -6px; /* Adjust margin for centering */\r\n    background-color: red;\r\n    border-radius: 50%;\r\n}\r\n\r\n`","C:\\Users\\Lenovo\\Desktop\\Dii-2023-hackaton\\react-app\\src\\components\\GlobalStyle.js",[],[],{"ruleId":"35","severity":1,"message":"36","line":3,"column":8,"nodeType":"37","messageId":"38","endLine":3,"endColumn":26},{"ruleId":"35","severity":1,"message":"39","line":19,"column":12,"nodeType":"37","messageId":"38","endLine":19,"endColumn":20},"no-unused-vars","'ComponentContainer' is defined but never used.","Identifier","unusedVar","'mapReady' is assigned a value but never used."]