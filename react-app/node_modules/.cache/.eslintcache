[{"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\index.js":"1","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\App.js":"2","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\reportWebVitals.js":"3","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\MapNew.js":"4","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\pages\\Erro404.js":"5","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\Navbar.js":"6","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\pages\\Notifcation.js":"7","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\pages\\OfficialsLogin.js":"8","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\StyleofMap\\BaseMap.js":"9","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\StyleofMap\\CSVFileLocal.js":"10","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\StyleofMap\\fetchNotifications.js":"11"},{"size":555,"mtime":1697880097869,"results":"12","hashOfConfig":"13"},{"size":927,"mtime":1698213989043,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1697442695666,"results":"15","hashOfConfig":"13"},{"size":10704,"mtime":1698214869628,"results":"16","hashOfConfig":"13"},{"size":116,"mtime":1697880097874,"results":"17","hashOfConfig":"13"},{"size":844,"mtime":1697989575655,"results":"18","hashOfConfig":"13"},{"size":111,"mtime":1697880097880,"results":"19","hashOfConfig":"13"},{"size":218,"mtime":1697880097885,"results":"20","hashOfConfig":"13"},{"size":1124,"mtime":1697998598620,"results":"21","hashOfConfig":"13"},{"size":1396,"mtime":1698074924002,"results":"22","hashOfConfig":"13"},{"size":447,"mtime":1698073196806,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"16e3mx3",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"27"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\index.js",[],[],["60"],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\App.js",["61"],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\reportWebVitals.js",[],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\MapNew.js",["62","63","64"],[],"import { MapContainer, Marker, Popup, useMapEvents } from \"react-leaflet\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport L from \"leaflet\";\r\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\r\nimport BaseMap from \"./StyleofMap/BaseMap\";\r\nimport CSVFileLocal from \"./StyleofMap/CSVFileLocal\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nimport fetchNotifications from \"./StyleofMap/fetchNotifications\"; // Import the fetchNotifications function\r\n\r\nconst MapNew = () => {\r\n  const initialCenter = [13.7563, 100.5018]; // Thailand's coordinates\r\n  const initialZoomLevel = 6; // Initial zoom level\r\n  //For userLocation ------Here------\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [zoom, setZoom] = useState(initialZoomLevel);\r\n  const [center, setCenter] = useState(initialCenter);\r\n  const [mapReady, setMapReady] = useState(false);\r\n\r\n  const [showDangerZone, setShowDangerZone] = useState(false);\r\n  const [showUserLocation, setShowUserLocation] = useState(false);\r\n\r\n  //Set bounds map\r\n  const southwestBound = L.latLng(5, 90);\r\n  const northeastBound = L.latLng(25, 120);\r\n  const bounds = L.latLngBounds(southwestBound, northeastBound);\r\n  //Use for select options\r\n\r\n  const titleOptions = [\"\", \"fire\", \"wildfire\", \"flood\"];\r\n\r\n  //fetched data from db spring\r\n  const [fetchedData, setFetchedData] = useState([]);\r\n\r\n  const [position, setPosition] = useState(null);\r\n  //Set default mark\r\n  const [form, setForm] = useState({\r\n    lat: 0,\r\n    lng: 0,\r\n    category: \"\", // Set the default category to an empty string\r\n  });\r\n\r\n  const fetchDataFromAPI = async () => {\r\n    const data = await fetchNotifications();\r\n    setFetchedData(data);\r\n  };\r\n\r\n  const samplemarkers = [\r\n    {\r\n      geocode: [13.7563, 100.5018],\r\n      popUp: \"Hello, I'm mark1\",\r\n    },\r\n    {\r\n      geocode: [13.7563, 100.5018],\r\n      popUp: \"Hello, I'm mark2\",\r\n    },\r\n  ];\r\n  //Icons here\r\n  const firehere = new L.Icon({\r\n    iconUrl: require(\"../assets/fire.png\"), // Make sure this URL is correct\r\n    iconSize: [38, 38],\r\n  });\r\n\r\n  const wildfirehere = new L.Icon({\r\n    iconUrl: require(\"../assets/wildfire.png\"), // Make sure this URL is correct\r\n    iconSize: [38, 38],\r\n  });\r\n  const floodhere = new L.Icon({\r\n    iconUrl: require(\"../assets/flood.png\"), // Make sure this URL is correct\r\n    iconSize: [38, 38],\r\n  });\r\n  const thinking = new L.Icon({\r\n    iconUrl: require(\"../assets/problem.png\"), // Make sure this URL is correct\r\n    iconSize: [38, 38],\r\n  });\r\n\r\n  const iamhere = new L.Icon({\r\n    iconUrl: require(\"../assets/raise-hand.png\"),\r\n    iconSize: [40, 40],\r\n  });\r\n\r\n  // Function to handle clicking the \"Go to My Location\" button\r\n  const handleGoToUserLocation = () => {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setUserLocation([latitude, longitude]);\r\n        setCenter([latitude, longitude]);\r\n        setZoom(16);\r\n        setShowDangerZone(!showDangerZone);\r\n        setShowUserLocation(!showUserLocation);\r\n      });\r\n    } else {\r\n      alert(\"Geolocation is not supported in your browser.\");\r\n    }\r\n  };\r\n  const fetchUserLocation = () => {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setUserLocation([latitude, longitude]);\r\n        setCenter([latitude, longitude]);\r\n        setZoom(16);\r\n        setShowUserLocation(true);\r\n        setMapReady(true); // Set map readiness to true\r\n      });\r\n    } else {\r\n      alert(\"Geolocation is not supported in your browser.\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchUserLocation();\r\n    fetchDataFromAPI();\r\n  }, []);\r\n\r\n  // function click set latlng to form\r\n  function LocationMarker() {\r\n    const map = useMapEvents({\r\n      click(e) {\r\n        // console.log(e.latlng);\r\n        map.flyTo(e.latlng, 15);\r\n        setPosition(e.latlng);\r\n        setForm({\r\n          ...form,\r\n          lat: e.latlng.lat,\r\n          lng: e.latlng.lng,\r\n        });\r\n      },\r\n    });\r\n    return position === null ? null : (\r\n      <Marker position={position} icon={thinking}>\r\n        <Popup>Ready for Marked</Popup>\r\n      </Marker>\r\n    );\r\n  }\r\n  // Log value in from\r\n  const handleOnChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  //submit data you want to db\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handlePostMarker(form.category, form.lat, form.lng);\r\n  };\r\n  //Start Crud operation\r\n  //Post METHOD\r\n  const handlePostMarker = async (category, latitude, longitude) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8090/notifications\", {\r\n        category: category,\r\n        latitude: latitude,\r\n        longitude: longitude,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        console.log(\"Data posted successfully\");\r\n        // You can add additional logic here to handle a successful post\r\n      } else {\r\n        console.error(\"Failed to post data:\", response.statusText);\r\n        // You can add error handling logic here\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      // You can handle network or other errors here\r\n    }\r\n  };\r\n  const handleUpdateMarker = async () => {\r\n    axios.put();\r\n  };\r\n\r\n  const handleDeleteMarker = (notificationId) => {\r\n    // Send a DELETE request to your server to delete the notification\r\n    axios\r\n      .delete(`http://localhost:8090/notifications/${notificationId}`)\r\n      .then((response) => {\r\n        // Handle success, such as removing the marker from the map\r\n        response.status(200);\r\n      })\r\n      .catch((error) => {\r\n        // Handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // displayMakers from db\r\n  const renderMarkers = () => {\r\n    return fetchedData.map((dataItem, index) => {\r\n      let markerIcon = firehere; // Default icon\r\n\r\n      if (dataItem.category === \"wildfire\") {\r\n        markerIcon = wildfirehere; // Change icon for wildfire category\r\n      } else if (dataItem.category === \"flood\") {\r\n        markerIcon = floodhere;\r\n      } else if (dataItem.category === \"\") {\r\n      }\r\n      return (\r\n        <Marker\r\n          key={index}\r\n          position={[dataItem.latitude, dataItem.longitude]}\r\n          icon={markerIcon}\r\n        >\r\n          <Popup>\r\n            <div>\r\n              <p>ID: {dataItem.id}</p>\r\n              <p>Latitude: {dataItem.latitude}</p>\r\n              <p>Longitude: {dataItem.longitude}</p>\r\n              <p>Sent At: {dataItem.sent_at}</p>\r\n              <button\r\n                onClick={(e) => handleUpdateMarker()}\r\n                className=\"border-2 border-blue-500 rounded-lg p-1 bg-blue-500 text-yellow-200 mr-4\"\r\n              >\r\n                Update\r\n              </button>\r\n              <button\r\n                onClick={() => handleDeleteMarker(dataItem.id)}\r\n                className=\"border-2 border-rose-500 rounded-lg p-1 bg-red-500 text-yellow-100 \"\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </Popup>\r\n        </Marker>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex\">\r\n        {userLocation && (\r\n          <MapContainer\r\n            center={center}\r\n            zoom={16}\r\n            className=\"MapContainer\"\r\n            bounds={bounds}\r\n            style={{ height: \"89vh\", width: \"87%\" }}\r\n            minZoom={6}\r\n          >\r\n            <LocationMarker />\r\n            <BaseMap />\r\n            <CSVFileLocal />\r\n            <MarkerClusterGroup chunkedLoading>\r\n              {samplemarkers.map((sampleMarker, index) => (\r\n                <Marker\r\n                  position={sampleMarker.geocode}\r\n                  icon={firehere}\r\n                  key={index}\r\n                >\r\n                  <Popup>{sampleMarker.popUp}</Popup>\r\n                </Marker>\r\n              ))}\r\n            </MarkerClusterGroup>\r\n            {showUserLocation && (\r\n              <Marker position={userLocation} icon={iamhere}>\r\n                <Popup>Your Location</Popup>\r\n              </Marker>\r\n            )}\r\n            {renderMarkers()}\r\n          </MapContainer>\r\n        )}\r\n        <form\r\n          className=\"bg-white shadow-md rounded px-4 py-2\"\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <div className=\"mb-4\">\r\n            <label\r\n              htmlFor=\"category\"\r\n              className=\"block text-gray-700 font-semibold\"\r\n            >\r\n              Category:\r\n            </label>\r\n            <select\r\n              name=\"category\"\r\n              id=\"category\"\r\n              onChange={(e) => handleOnChange(e)}\r\n              className=\"w-full border border-gray-300 rounded py-2 px-3 focus:outline-none focus:border-blue-500\"\r\n            >\r\n              {titleOptions.map((option, index) => (\r\n                <option key={index} value={option}>\r\n                  {option}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label\r\n              htmlFor=\"latitude\"\r\n              className=\"block text-gray-700 font-semibold\"\r\n            >\r\n              Latitude:\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"lat\"\r\n              value={form.lat}\r\n              id=\"latitude\"\r\n              onChange={(e) => setForm({ ...form, lat: e.target.value })}\r\n              className=\"w-full border border-gray-300 rounded py-2 px-3 focus:outline-none focus:border-blue-500\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label\r\n              htmlFor=\"longitude\"\r\n              className=\"block text-gray-700 font-semibold\"\r\n            >\r\n              Longitude:\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              value={form.lng}\r\n              name=\"lng\"\r\n              onChange={(e) => setForm({ ...form, lng: e.target.value })}\r\n              id=\"longitude\"\r\n              className=\"w-full border border-gray-300 rounded py-2 px-3 focus:outline-none focus:border-blue-500\"\r\n            />\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-blue-500 text-white font-semibold py-2 px-4 rounded hover:bg-blue-600 focus:outline-none focus:bg-blue-600\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapNew;\r\n","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\pages\\Erro404.js",[],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\Navbar.js",[],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\pages\\Notifcation.js",[],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\pages\\OfficialsLogin.js",[],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\StyleofMap\\BaseMap.js",["65"],[],"import { Layer } from \"leaflet\";\r\nimport React from \"react\";\r\nimport { TileLayer, LayersControl } from \"react-leaflet\";\r\n\r\nconst BaseMap = () => {\r\n  return (\r\n    <LayersControl position=\"topright\">\r\n      <LayersControl.BaseLayer name=\"Default\" checked>\r\n        <TileLayer url=\"https://tile.openstreetmap.de/{z}/{x}/{y}.png\" />\r\n      </LayersControl.BaseLayer>\r\n      <LayersControl.BaseLayer name=\"Anime\">\r\n        <TileLayer url=\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\" />\r\n      </LayersControl.BaseLayer>\r\n      <LayersControl.BaseLayer name=\"sandbox\">\r\n        <TileLayer\r\n          url=\"https://tiles.stadiamaps.com/tiles/stamen_watercolor/{z}/{x}/{y}.jpg\"\r\n          attribution='&copy; <a href=\"https://www.stadiamaps.com/\" target=\"_blank\">Stadia Maps</a> &copy; <a href=\"https://www.stamen.com/\" target=\"_blank\">Stamen Design</a> &copy; <a href=\"https://openmaptiles.org/\" target=\"_blank\">OpenMapTiles</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n      </LayersControl.BaseLayer>\r\n    </LayersControl>\r\n  );\r\n};\r\n\r\nexport default BaseMap;\r\n","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\StyleofMap\\CSVFileLocal.js",["66","67","68"],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\StyleofMap\\fetchNotifications.js",["69"],[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":14},{"ruleId":"72","severity":1,"message":"76","line":17,"column":10,"nodeType":"74","messageId":"75","endLine":17,"endColumn":14},{"ruleId":"72","severity":1,"message":"77","line":19,"column":10,"nodeType":"74","messageId":"75","endLine":19,"endColumn":18},{"ruleId":"72","severity":1,"message":"78","line":83,"column":9,"nodeType":"74","messageId":"75","endLine":83,"endColumn":31},{"ruleId":"72","severity":1,"message":"79","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":15},{"ruleId":"72","severity":1,"message":"80","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"72","severity":1,"message":"81","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":16},{"ruleId":"72","severity":1,"message":"82","line":8,"column":10,"nodeType":"74","messageId":"75","endLine":8,"endColumn":17},{"ruleId":"72","severity":1,"message":"80","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},"no-new-object",["83"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'zoom' is assigned a value but never used.","'mapReady' is assigned a value but never used.","'handleGoToUserLocation' is assigned a value but never used.","'Layer' is defined but never used.","'React' is defined but never used.","'Marker' is defined but never used.","'airport' is assigned a value but never used.","no-object-constructor"]