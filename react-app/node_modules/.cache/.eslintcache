[{"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\index.js":"1","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\reportWebVitals.js":"2","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\App.js":"3","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\Mapadmin.js":"4","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\Mapuser.js":"5","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\Navbar.js":"6","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\pages\\Erro404.js":"7","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\Home.js":"8","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\pages\\ManageAdmin.js":"9","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\Form\\AdminLoginForm.js":"10","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\Form\\Formedit.js":"11","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\StyleofMap\\CSVFileLocal.js":"12","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\functions\\fetchNotifications.js":"13","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\layers\\CombineLayers.js":"14","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\layers\\ProvinceTH.js":"15","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\layers\\PointofInterest.js":"16"},{"size":555,"mtime":1699366482833,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1697442695666,"results":"19","hashOfConfig":"18"},{"size":1260,"mtime":1699364476610,"results":"20","hashOfConfig":"18"},{"size":16347,"mtime":1699358911646,"results":"21","hashOfConfig":"18"},{"size":7310,"mtime":1699364476640,"results":"22","hashOfConfig":"18"},{"size":5917,"mtime":1699367743576,"results":"23","hashOfConfig":"18"},{"size":117,"mtime":1699105538607,"results":"24","hashOfConfig":"18"},{"size":7061,"mtime":1699364476640,"results":"25","hashOfConfig":"18"},{"size":6925,"mtime":1699364476645,"results":"26","hashOfConfig":"18"},{"size":3493,"mtime":1699367743575,"results":"27","hashOfConfig":"18"},{"size":3118,"mtime":1699364476639,"results":"28","hashOfConfig":"18"},{"size":1159,"mtime":1699367743576,"results":"29","hashOfConfig":"18"},{"size":842,"mtime":1699364476642,"results":"30","hashOfConfig":"18"},{"size":816,"mtime":1699364476643,"results":"31","hashOfConfig":"18"},{"size":407,"mtime":1698743477128,"results":"32","hashOfConfig":"18"},{"size":690,"mtime":1699364476644,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19vj20h",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\index.js",[],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\reportWebVitals.js",[],[],["84","85","86","87","88","89"],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\App.js",["90"],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\Mapadmin.js",["91","92","93"],[],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { MapContainer, Marker, Popup, useMapEvents } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport icon from \"leaflet/dist/images/marker-icon.png\";\r\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\r\nimport CSVFileLocal from \"./StyleofMap/CSVFileLocal\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n//For backend test\r\nimport { fetchAllNotifications } from \"./functions/fetchNotifications\";\r\nimport Formedit from \"./Form/Formedit\";\r\nimport CombineLayers from \"./layers/CombineLayers\";\r\n\r\nconst Mapadmin = () => {\r\n  const initialCenter = [13.7563, 100.5018];\r\n  const initialZoomLevel = 6;\r\n  const mapRef = useRef(); // Create a ref to store the map instance\r\n\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [showUserLocation, setShowUserLocation] = useState(false);\r\n  const [zoom, setZoom] = useState(initialZoomLevel);\r\n  const [center, setCenter] = useState(initialCenter);\r\n\r\n  const titleOptions = [\r\n    \"Select Category\",\r\n    \"Fire\",\r\n    \"Flood\",\r\n    \"Land Slide\",\r\n    \"Active Shooting\",\r\n  ];\r\n  const bounds = L.latLngBounds(L.latLng(5, 90), L.latLng(25, 120));\r\n\r\n  const [fetchedData, setFetchedData] = useState([]);\r\n  const [position, setPosition] = useState(null);\r\n  const [form, setForm] = useState({\r\n    latitude: 0,\r\n    longitude: 0,\r\n    category: \"\",\r\n  });\r\n  const [data, setData] = useState([]);\r\n  let DefaultIcon = L.icon({\r\n    iconUrl: icon,\r\n  });\r\n  //For Edit button\r\n  const [id, setId] = useState(null);\r\n  const [drag, setDrag] = useState(false);\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  L.Marker.prototype.options.icon = DefaultIcon;\r\n\r\n  // Create a state variable to hold the marker data\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchUserLocation();\r\n    fetchDataFromAPI();\r\n  }, []);\r\n  const loaddata = () => {\r\n    fetchDataFromAPI()\r\n      .then((res) => {\r\n        setData(res.data);\r\n      })\r\n\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // FETCH USER LOCATION\r\n  const fetchUserLocation = () => {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setUserLocation([latitude, longitude]);\r\n        setCenter([latitude, longitude]);\r\n        setZoom(16);\r\n        setShowUserLocation(true);\r\n      });\r\n    } else {\r\n      alert(\"Geolocation is not supported in your browser.\");\r\n    }\r\n  };\r\n\r\n  // Fetch data from Spring boot 8090\r\n  const fetchDataFromAPI = async () => {\r\n    try {\r\n      const data = await fetchAllNotifications();\r\n      setFetchedData(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // Click for ready Marked\r\n  function LocationMarker() {\r\n    const map = useMapEvents({\r\n      click(e) {\r\n        map.flyTo(e.latlng, 15);\r\n        setPosition(e.latlng);\r\n        setForm({\r\n          ...form,\r\n          latitude: e.latlng.lat,\r\n          longitude: e.latlng.lng,\r\n        });\r\n      },\r\n    });\r\n    return position === null ? null : (\r\n      <Marker\r\n        position={position}\r\n        icon={createCustomIcon(\"problem.png\", [38, 38])}\r\n      >\r\n        <Popup>Ready for Marked</Popup>\r\n      </Marker>\r\n    );\r\n  }\r\n\r\n  // Pull Icon from assets\r\n  const createCustomIcon = (iconUrl, iconSize) => {\r\n    return new L.Icon({\r\n      iconUrl: require(`../assets/${iconUrl}`),\r\n      iconSize,\r\n    });\r\n  };\r\n\r\n  // Write in form\r\n  const handleOnChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // Group Markers\r\n  const groupedMarkers = fetchedData.reduce((grouped, dataItem) => {\r\n    if (!grouped[dataItem.category]) {\r\n      grouped[dataItem.category] = [];\r\n    }\r\n    grouped[dataItem.category].push(dataItem);\r\n    return grouped;\r\n  }, {});\r\n\r\n  const selectedCategory = form?.category || \"\"; // Provide a default value if 'form' or 'category' is undefined\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handlePostMarker(form.category, form.latitude, form.longitude);\r\n\r\n    // Create a new marker data\r\n    const newMarker = {\r\n      id: Date.now(), // You can use a unique identifier for the marker\r\n      category: form.category,\r\n      latitude: form.latitude,\r\n      longitude: form.longitude,\r\n      sent_at: new Date().toISOString(), // Add timestamp or use your actual timestamp\r\n    };\r\n\r\n    // Update the markers state with the new marker data\r\n    setMarkers((prevMarkers) => [...prevMarkers, newMarker]);\r\n\r\n    // Clear the form\r\n    setForm({\r\n      latitude: 0,\r\n      longitude: 0,\r\n      category: \"\", // Reset the category to its default value\r\n    });\r\n    loaddata();\r\n  };\r\n\r\n  const flyto = (latitude, longitude) => {\r\n    console.log(latitude, longitude);\r\n    mapRef.current.flyTo([latitude, longitude], 15);\r\n  };\r\n\r\n  // Handle posting a new marker to the server\r\n  const handlePostMarker = async (category, latitude, longitude) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8080/notifications\", {\r\n        category: category,\r\n        latitude: latitude,\r\n        longitude: longitude,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        console.log(\"Data posted successfully\");\r\n      } else {\r\n        console.error(\"Failed to post data:\", response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle deleting a marker\r\n  const handleDeleteMarker = (notificationId) => {\r\n    // Perform the delete operation\r\n    axios\r\n      .delete(`http://localhost:8080/notifications/${notificationId}`)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          console.log(\"Data deleted successfully\");\r\n          loaddata(); // Reload data after successful deletion\r\n        } else {\r\n          console.error(\"Failed to delete data:\", response.statusText);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  //Handle edit\r\n  const handleEdit = (id, category, latitude, longitude) => {\r\n    flyto(latitude, longitude);\r\n\r\n    setId(id);\r\n    setDrag(true); // Enable marker dragging\r\n\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleSubmitEdit = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    for (const key in form) {\r\n      formData.append(key, form[key]);\r\n    }\r\n\r\n    // Send the updated marker data to the server here\r\n    // For example, you can use an Axios POST request\r\n    axios\r\n      .patch(`http://localhost:8080/notifications/${id}`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n\r\n      .then((response) => {\r\n        // Handle success\r\n        console.log(response);\r\n        loaddata();\r\n        setEdit(false);\r\n        setId(null);\r\n        setDrag(!drag);\r\n        if (response.status === 200) {\r\n          console.log(\"Data updated successfully\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // Handle error\r\n\r\n        console.error(\"Failed to update data:\", error);\r\n      });\r\n  };\r\n\r\n  const handleDragend = (e) => {\r\n    const newLat = e.target.getLatLng().lat;\r\n    const newLng = e.target.getLatLng().lng;\r\n\r\n    setForm({\r\n      ...form,\r\n      latitude: newLat,\r\n      longitude: newLng,\r\n    });\r\n    updateArrayData(id, newLat, newLng);\r\n  };\r\n\r\n  const updateArrayData = (id, latitude, longitude) => {\r\n    setData((prevData) =>\r\n      prevData.map((item) =>\r\n        item.id === id ? { ...item, latitude, longitude } : item\r\n      )\r\n    );\r\n  };\r\n  // Handle cancel\r\n  const handleCancel = () => {\r\n    setEdit(false);\r\n    setId(null);\r\n    setDrag(!drag);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex\">\r\n        {userLocation && (\r\n          <MapContainer\r\n            center={center}\r\n            zoom={16}\r\n            ref={mapRef} // Assign the map instance to the ref\r\n            className=\"MapContainer\"\r\n            bounds={bounds}\r\n            style={{ height: \"89vh\", width: \"87%\" }}\r\n            minZoom={6}\r\n          >\r\n            <CombineLayers />\r\n            <LocationMarker />\r\n            <CSVFileLocal />\r\n            {Object.keys(groupedMarkers).map((category, index) => (\r\n              <MarkerClusterGroup\r\n                key={index}\r\n                maxClusterRadius={50}\r\n                chunkedLoading\r\n              >\r\n                {groupedMarkers[category].map((dataItem, markerIndex) => {\r\n                  let markerIcon = createCustomIcon(\"fire.png\", [38, 38]);\r\n\r\n                  if (category === \"Flood\") {\r\n                    markerIcon = createCustomIcon(\"flood.png\", [38, 38]);\r\n                  } else if (category === \"Land Slide\") {\r\n                    markerIcon = createCustomIcon(\"landslide.png\", [38, 38]);\r\n                  } else if (category === \"Active Shooting\") {\r\n                    markerIcon = createCustomIcon(\"criminal.png\", [38, 38]);\r\n                  }\r\n\r\n                  return (\r\n                    <Marker\r\n                      eventHandlers={{\r\n                        dragend: (e) => console.log(e),\r\n                      }}\r\n                      draggable={id === dataItem.id ? drag : false}\r\n                      key={markerIndex}\r\n                      position={[dataItem.latitude, dataItem.longitude]}\r\n                      icon={markerIcon}\r\n                    >\r\n                      <Popup>\r\n                        <div>\r\n                          <p>ID: {dataItem.id}</p>\r\n                          <p>category: {dataItem.category}</p>\r\n                          <p>Latitude: {dataItem.latitude}</p>\r\n                          <p>Longitude: {dataItem.longitude}</p>\r\n                          <p>Sent At: {dataItem.sent_at}</p>\r\n                          <button\r\n                            onClick={() =>\r\n                              handleEdit(\r\n                                dataItem.id,\r\n                                dataItem.category,\r\n                                dataItem.latitude,\r\n                                dataItem.longitude\r\n                              )\r\n                            }\r\n                            className=\"border-2 border-blue-500 rounded-lg p-1 bg-blue-500 text-yellow-200 mr-4\"\r\n                          >\r\n                            Update\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDeleteMarker(dataItem.id)}\r\n                            className=\"border-2 border-rose-500 rounded-lg p-1 bg-red-500 text-yellow-100\"\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </Popup>\r\n                    </Marker>\r\n                  );\r\n                })}\r\n              </MarkerClusterGroup>\r\n            ))}\r\n            {showUserLocation && (\r\n              <Marker\r\n                position={userLocation}\r\n                icon={createCustomIcon(\"raise-hand.png\", [40, 40])}\r\n              >\r\n                <Popup>Your Location</Popup>\r\n              </Marker>\r\n            )}\r\n            {/* Render newly added markers */}\r\n            {markers.map((newMarker, markerIndex) => {\r\n              let markerIcon;\r\n              if (newMarker.category === \"Fire\") {\r\n                markerIcon = createCustomIcon(\"fire.png\", [38, 38]);\r\n              } else if (newMarker.category === \"Flood\") {\r\n                markerIcon = createCustomIcon(\"flood.png\", [38, 38]);\r\n              } else if (newMarker.category === \"Land Slide\") {\r\n                markerIcon = createCustomIcon(\"landslide.png\", [38, 38]);\r\n              } else if (newMarker.category === \"Active Shooting\") {\r\n                markerIcon = createCustomIcon(\"criminal.png\", [38, 38]);\r\n              }\r\n\r\n              return (\r\n                <Marker\r\n                  key={markerIndex}\r\n                  position={[newMarker.latitude, newMarker.longitude]}\r\n                  icon={markerIcon}\r\n                  eventHandlers={{\r\n                    dragend: handleDragend,\r\n                  }}\r\n                  draggable={id === newMarker.id ? drag : false}\r\n                >\r\n                  <Popup>\r\n                    <div>\r\n                      <p>ID: {newMarker.id}</p>\r\n                      <p>category: {newMarker.category}</p>\r\n                      <p>Latitude: {newMarker.latitude}</p>\r\n                      <p>Longitude: {newMarker.longitude}</p>\r\n                      <p>Sent At: {newMarker.sent_at}</p>\r\n                      <button className=\"border-2 border-blue-500 rounded-lg p-1 bg-blue-500 text-yellow-200 mr-4\">\r\n                        Update\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDeleteMarker(newMarker.id)}\r\n                        className=\"border-2 border-rose-500 rounded-lg p-1 bg-red-500 text-yellow-100\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </Popup>\r\n                </Marker>\r\n              );\r\n            })}\r\n          </MapContainer>\r\n        )}\r\n        {edit ? (\r\n          <Formedit\r\n            titleOptions={titleOptions}\r\n            handleOnChange={handleOnChange}\r\n            handleCancel={handleCancel}\r\n            id={id}\r\n            form={form}\r\n            setForm={setForm}\r\n            handleSubmitEdit={handleSubmitEdit}\r\n          />\r\n        ) : (\r\n          <form\r\n            className=\"bg-white shadow-md rounded px-4 py-2\"\r\n            onSubmit={handleSubmit}\r\n          >\r\n            <div className=\"mb-4\">\r\n              <label\r\n                htmlFor=\"category\"\r\n                className=\"block text-gray-700 font-semibold\"\r\n              >\r\n                category:\r\n              </label>\r\n              <select\r\n                name=\"category\"\r\n                value={form.category} // Add this line to set the select element's value\r\n                id=\"category\"\r\n                onChange={(e) => handleOnChange(e)}\r\n                className=\"w-full border border-gray-300 rounded py-2 px-3 focus:outline-none focus:border-blue-500\"\r\n              >\r\n                {titleOptions.map((option, index) => (\r\n                  <option key={index} value={option}>\r\n                    {option}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label\r\n                htmlFor=\"latitude\"\r\n                className=\"block text-gray-700 font-semibold\"\r\n              >\r\n                Latitude:\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"latitude\"\r\n                value={form.latitude}\r\n                id=\"latitude\"\r\n                onChange={(e) => handleOnChange(e)}\r\n                className=\"w-full border border-gray-300 rounded py-2 px-3 focus:outline-none focus:border-blue-500\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label\r\n                htmlFor=\"longitude\"\r\n                className=\"block text-gray-700 font-semibold\"\r\n              >\r\n                Longitude:\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"longitude\"\r\n                value={form.longitude}\r\n                onChange={(e) => handleOnChange(e)}\r\n                id=\"longitude\"\r\n                className=\"w-full border border-gray-300 rounded py-2 px-3 focus:outline-none focus:border-blue-500\"\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={form.category === \"Select Category\"} // Disable the button when the category is \"Select Category\"\r\n                className=\"bg-blue-500 text-white font-semibold py-2 px-4 rounded hover-bg-blue-600 focus:outline-none focus:bg-blue-600\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Mapadmin;\r\n","E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\Mapuser.js",["94","95","96","97","98","99","100","101","102","103","104"],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\Navbar.js",["105"],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\pages\\Erro404.js",[],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\Home.js",[],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\pages\\ManageAdmin.js",[],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\Form\\AdminLoginForm.js",[],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\Form\\Formedit.js",["106"],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\StyleofMap\\CSVFileLocal.js",["107"],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\functions\\fetchNotifications.js",[],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\layers\\CombineLayers.js",[],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\layers\\ProvinceTH.js",[],[],"E:\\Dii\\BigProject\\Dii-2023-hackaton\\react-app\\src\\components\\layers\\PointofInterest.js",[],[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":14},{"ruleId":"120","severity":1,"message":"124","line":21,"column":10,"nodeType":"122","messageId":"123","endLine":21,"endColumn":14},{"ruleId":"120","severity":1,"message":"125","line":40,"column":10,"nodeType":"122","messageId":"123","endLine":40,"endColumn":14},{"ruleId":"120","severity":1,"message":"126","line":140,"column":9,"nodeType":"122","messageId":"123","endLine":140,"endColumn":25},{"ruleId":"120","severity":1,"message":"127","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":13},{"ruleId":"120","severity":1,"message":"128","line":8,"column":3,"nodeType":"122","messageId":"123","endLine":8,"endColumn":9},{"ruleId":"120","severity":1,"message":"129","line":9,"column":3,"nodeType":"122","messageId":"123","endLine":9,"endColumn":9},{"ruleId":"120","severity":1,"message":"130","line":10,"column":3,"nodeType":"122","messageId":"123","endLine":10,"endColumn":12},{"ruleId":"120","severity":1,"message":"124","line":28,"column":10,"nodeType":"122","messageId":"123","endLine":28,"endColumn":14},{"ruleId":"120","severity":1,"message":"131","line":31,"column":9,"nodeType":"122","messageId":"123","endLine":31,"endColumn":21},{"ruleId":"120","severity":1,"message":"125","line":41,"column":10,"nodeType":"122","messageId":"123","endLine":41,"endColumn":14},{"ruleId":"120","severity":1,"message":"132","line":41,"column":16,"nodeType":"122","messageId":"123","endLine":41,"endColumn":23},{"ruleId":"120","severity":1,"message":"133","line":48,"column":19,"nodeType":"122","messageId":"123","endLine":48,"endColumn":29},{"ruleId":"120","severity":1,"message":"134","line":112,"column":9,"nodeType":"122","messageId":"123","endLine":112,"endColumn":23},{"ruleId":"120","severity":1,"message":"126","line":128,"column":9,"nodeType":"122","messageId":"123","endLine":128,"endColumn":25},{"ruleId":"120","severity":1,"message":"135","line":23,"column":13,"nodeType":"122","messageId":"123","endLine":23,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":16,"column":6,"nodeType":"138","endLine":16,"endColumn":10,"suggestions":"139"},{"ruleId":"120","severity":1,"message":"140","line":7,"column":10,"nodeType":"122","messageId":"123","endLine":7,"endColumn":17},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["141"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'zoom' is assigned a value but never used.","'data' is assigned a value but never used.","'selectedCategory' is assigned a value but never used.","'axios' is defined but never used.","'Circle' is defined but never used.","'useMap' is defined but never used.","'TileLayer' is defined but never used.","'titleOptions' is assigned a value but never used.","'setData' is assigned a value but never used.","'setMarkers' is assigned a value but never used.","'handleOnChange' is assigned a value but never used.","'idToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["142"],"'airport' is assigned a value but never used.","no-object-constructor",{"desc":"143","fix":"144"},"Update the dependencies array to be: [id, loadData]",{"range":"145","text":"146"},[318,322],"[id, loadData]"]